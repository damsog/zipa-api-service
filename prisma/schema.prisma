// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider             = "prisma-client-py"
    recursive_type_depth = 5
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Faction {
    id                   String                      @id @default(cuid())
    name                 String
    description          String                      @db.Text
    identity             String?
    aspects              String?
    created_at           DateTime                    @default(now())
    updated_at           DateTime                    @updatedAt
    unit_specializations FactionUnitSpecialization[]
}

model UnitSpecialization {
    id                   String                      @id @default(cuid())
    name                 String
    description          String                      @db.Text
    vitality             Float
    strength             Float
    dexterity            Float
    mind                 Float
    faith                Float
    armor                Float
    magic_armor          Float
    essence              Float
    agility              Float
    hit_chance           Float
    evasion              Float
    hit_rate             Float
    movement             Float
    weapon_proficiencies String                      @db.Text
    tier                 Int
    skills               UnitSpecializationSkill[]
    items                UnitSpecializationItem[]
    traits               UnitSpecializationTrait[]
    created_at           DateTime                    @default(now())
    updated_at           DateTime                    @updatedAt
    factions             FactionUnitSpecialization[]
    skills_summon        SkillSummon[]
}

model FactionUnitSpecialization {
    id                     String             @id @default(cuid())
    faction                Faction            @relation(fields: [faction_id], references: [id], onDelete: Cascade)
    faction_id             String
    unit_specialization    UnitSpecialization @relation(fields: [unit_specialization_id], references: [id], onDelete: Cascade)
    unit_specialization_id String
    created_at             DateTime           @default(now())
    updated_at             DateTime           @updatedAt
}

model SkillType {
    id          String              @id @default(cuid())
    name        String
    description String              @db.Text
    skills      AssignedSkillType[]
    created_at  DateTime            @default(now())
    updated_at  DateTime            @updatedAt
}

model Skill {
    id                   String                    @id @default(cuid())
    name                 String
    description          String                    @db.Text
    conditions           String?
    physical_damage      String?
    magical_damage       String?
    healing              String?
    vitality_recovery    String?
    essence_recovery     String?
    range                String?
    area_of_effect       String?
    essence_cost         String?
    vitality_cost        String?
    cooldown             Float                     @default(0)
    channeled            Boolean                   @default(false)
    target               Target                    @default(ENEMY)
    skill_on             SkillOn                   @default(INSTANT)
    skill_types          AssignedSkillType[]
    effects              SkillEffect[]
    items                ItemSkill[]
    unit_specializations UnitSpecializationSkill[]
    summons              SkillSummon[]
    created_at           DateTime                  @default(now())
    updated_at           DateTime                  @updatedAt
}

enum SkillOn {
    INSTANT
    OVER_TIME
    DURING_CHANNEL
    AFTER_CHANNEL
    DELAYED
}

enum Target {
    NONE
    SELF
    ALLY
    ALLY_SUMMON
    ALLY_AROUND
    ALLY_EXCEPT_SELF
    ENEMY
    ENEMY_SUMMON
    ENEMY_AROUND
    ANY
    ANY_AROUND
    ANY_EXCEPT_SELF
    ANY_SUMMON
    POINT
    POINT_ENEMY
    POINT_ALLY
    AREA
    AREA_ENEMY
    AREA_ALLY
}

model Trait {
    id                   String                    @id @default(cuid())
    name                 String
    description          String                    @db.Text
    effects              TraitEffect[]
    unit_specializations UnitSpecializationTrait[]
    created_at           DateTime                  @default(now())
    updated_at           DateTime                  @updatedAt
}

model Item {
    id                    String                   @id @default(cuid())
    name                  String
    description           String                   @db.Text
    conditions            String?
    rarity                ItemRarity               @default(COMMON)
    is_weapon             Boolean                  @default(false)
    object_type           ObjectType               @default(OTHER)
    magic_effectiveness   String?
    physical_damage       String?
    magical_damage        String?
    healing               String?
    vitality_recovery     String?
    essence_recovery      String?
    vitality              String?
    range                 String?                  @default("1")
    damage                String?
    armor                 String?
    magic_armor           String?
    essence               String?
    agility               String?
    hit_chance            String?
    evasion               String?
    hit_rate              String?
    movement              String?
    ammo                  String?
    shield                String?
    dexterity_requirement Float                    @default(0)
    strength_requirement  Float                    @default(0)
    mind_requirement      Float                    @default(0)
    faith_requirement     Float                    @default(0)
    weight                Float                    @default(0)
    skills                ItemSkill[]
    unit_specializations  UnitSpecializationItem[]
    created_at            DateTime                 @default(now())
    updated_at            DateTime                 @updatedAt
}

enum ItemRarity {
    COMMON
    UNCOMMON
    RARE
    EPIC
    LEGENDARY
}

model Effect {
    id                  String        @id @default(cuid())
    name                String
    description         String        @db.Text
    conditions          String?
    magic_effectiveness String?
    physical_damage     String?
    magical_damage      String?
    healing             String?
    vitality_recovery   String?
    essence_recovery    String?
    vitality            String?
    range               String?
    damage              String?
    armor               String?
    magic_armor         String?
    essence             String?
    agility             String?
    hit_chance          String?
    evasion             String?
    hit_rate            String?
    movement            String?
    ammo                String?
    shield              String?
    barrier             Float?
    max_stack           Int?          @default(1)
    skills              SkillEffect[]
    traits              TraitEffect[]
    created_at          DateTime      @default(now())
    updated_at          DateTime      @updatedAt
}

model AssignedSkillType {
    id            String    @id @default(cuid())
    skill         Skill     @relation(fields: [skill_id], references: [id], onDelete: Cascade)
    skill_id      String
    skill_type    SkillType @relation(fields: [skill_type_id], references: [id], onDelete: Cascade)
    skill_type_id String
    created_at    DateTime  @default(now())
    updated_at    DateTime  @updatedAt
}

model UnitSpecializationSkill {
    id                     String             @id @default(cuid())
    unit_specialization    UnitSpecialization @relation(fields: [unit_specialization_id], references: [id], onDelete: Cascade)
    unit_specialization_id String
    skill                  Skill              @relation(fields: [skill_id], references: [id], onDelete: Cascade)
    skill_id               String
    created_at             DateTime           @default(now())
    updated_at             DateTime           @updatedAt
}

model UnitSpecializationItem {
    id                     String             @id @default(cuid())
    unit_specialization    UnitSpecialization @relation(fields: [unit_specialization_id], references: [id], onDelete: Cascade)
    unit_specialization_id String
    item                   Item               @relation(fields: [item_id], references: [id], onDelete: Cascade)
    item_id                String
    quantity               Float
    created_at             DateTime           @default(now())
    updated_at             DateTime           @updatedAt
}

model ItemSkill {
    id           String   @id @default(cuid())
    item         Item     @relation(fields: [item_id], references: [id], onDelete: Cascade)
    item_id      String
    skill        Skill    @relation(fields: [skill_id], references: [id], onDelete: Cascade)
    skill_id     String
    essence_cost Float
    cooldown     Float    @default(0)
    created_at   DateTime @default(now())
    updated_at   DateTime @updatedAt
}

model UnitSpecializationTrait {
    id                     String             @id @default(cuid())
    unit_specialization    UnitSpecialization @relation(fields: [unit_specialization_id], references: [id], onDelete: Cascade)
    unit_specialization_id String
    trait                  Trait              @relation(fields: [trait_id], references: [id], onDelete: Cascade)
    trait_id               String
    created_at             DateTime           @default(now())
    updated_at             DateTime           @updatedAt
}

model SkillEffect {
    id         String   @id @default(cuid())
    skill      Skill    @relation(fields: [skill_id], references: [id], onDelete: Cascade)
    skill_id   String
    effect     Effect   @relation(fields: [effect_id], references: [id], onDelete: Cascade)
    effect_id  String
    conditions String?
    duration   Float    @default(1)
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
}

model TraitEffect {
    id         String   @id @default(cuid())
    trait      Trait    @relation(fields: [trait_id], references: [id], onDelete: Cascade)
    trait_id   String
    effect     Effect   @relation(fields: [effect_id], references: [id], onDelete: Cascade)
    effect_id  String
    conditions String?
    duration   Float    @default(1)
    cooldown   Float    @default(0)
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
}

model SkillSummon {
    id                     String             @id @default(cuid())
    skill                  Skill              @relation(fields: [skill_id], references: [id], onDelete: Cascade)
    skill_id               String
    unit_specialization    UnitSpecialization @relation(fields: [unit_specialization_id], references: [id], onDelete: Cascade)
    unit_specialization_id String
    conditions             String?
    duration               Float              @default(1)
    created_at             DateTime           @default(now())
    updated_at             DateTime           @updatedAt
}

enum ObjectType {
    CURVED_SWORD_1H
    CURVED_SWORD_2H
    STRAIGHT_SWORD_1H
    STRAIGHT_SWORD_2H
    AXE_1H
    AXE_2H
    HAMMER_1H
    HAMMER_2H
    SPEAR_1H
    SPEAR_2H
    JAVELIN_1H
    STAFF_1H
    STAFF_2H
    BOW_2H
    CROSSBOW_2H
    DAGGER_1H
    SMALL_SHIELD
    MEDIUM_SHIELD
    LARGE_SHIELD
    LIGHT_ARMOR
    MEDIUM_ARMOR
    HEAVY_ARMOR
    AMULET
    TRINKET
    RING
    CONSUMABLE
    MATERIAL
    KEY
    OTHER
}
